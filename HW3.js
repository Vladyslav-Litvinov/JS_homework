
let example_1 = 'number' + 3 + 3;
console.log (example_1); // Мне показывает number33, это происходит из-за конкатенации. Стринга у нас совмещается с числом, что в итоге не дает нам сделать операци вичисления и просто к нашему тексту number3 добавляет еще одну 3

let example_2 = null + 3;
console.log (example_2); // Мне показывает 3, это происходит из-за того, что null это 0 и при сложении в итоге у нас получается 0+3=3

let example_3 = 5 && "qwerty";
console.log (example_3); // Мне показывает qwerty, это происходит из-за того, что если мы исользуем двой амперсанд, то у нас показывается последнее значение операнда, если он не null, в нашем случае это не null, поэтому и такой ответ

let example_4 = +'40' + +'2' + "hillel";
console.log (example_4); // Мне показывает 42hillel, это происходит из-за того, что сначало мы 40 и 2 приводим обратно к числу через унарний эфект, после чего проводим операцию сложения 40+2=42 и добавляем 42 к стринге 'hillel'

let example_5 = '10' - 5 === 6;
console.log (example_5); // Мне показывает false, это происходит из-за того, что сначало мы делаем перевод 10 обратно к числу, после чего проводим вычитание 10-5=5, после этого у нас происходит строгое равенство 5===6, так-как в этом случае равенства нет, ответ false

let example_6 = true + false;
console.log (example_6); // Мне показывает 1, это происходит из-за того, что true = 1, false = 0, соотвественно 1+0=1

let example_7 = '4px' - 3;
console.log (example_7); // Мне показывает Nan, это происходит из-за того, что 4px является стрингой и при операции вычитания компилятор видит, что мы вычитаем не число от числа из-за этого и показывает NaN

let example_8 = '4' - 3;
console.log (example_8); // Мне показывает 1, это происходит из-за того, что мы переводим 4 в число и после этого проводим операцию вычитания 4-3=1

let example_9 = '6' + 3 ** 0;
console.log (example_9); // Мне показывает 61, это происходит из-за того, что мы 3 возводим в степень, 3 в нулевой степени = 1, мы не приводим 6 к числу, после чего просто мерджим строки 6 и 1, в итоге получаем 61, так как 6 не является числом, у нас не будет 7, мы просто добавляем строки друг к другу, но не делаем математическое сложение

let example_10 = 12 / '6';
console.log (example_10); // Мне показывает 2, это происходит из-за того, что 6 превращается в число, после чего происходит операция деления, 12/6=2

let example_11 = '10' + (5 === 6);
console.log (example_11); // Мне показывает 10false, это происходит из-за того, что сначало мы делаем проверку на строгое равенстов 5===6, у нас оно не выполняется и мы получаем false, после чего происходит соединение строк 10 и false, что в итоге дает нам 10false

let example_12 = null == ' ';
console.log (example_12); // Мне показывает false, это происходит из-за того, что у нас происходит сравнение разных типов данных

let example_13 = 3 ** (9 / 3);
console.log (example_13); // Мне показывает 27, это происходит из-за того, что сначало мы делаем операцию деления 9/3=3, после чего возводим 3 в 3 степень и получаем 27

let example_14 = !!'false' == !!'true';
console.log (example_14); // Мне показывает true, это происходит из-за того, что у нас значения стринговые, значит они изначально false, из-за чего даже при изменении их значения с помощью знака ! мы ничего не изменим, так-как стринг = false. Так как у нас с обеих сторон по 2 знака !! изменения будут равноценные и false=false

let example_15 = 0 || '0' && 1;
console.log (example_15); // Мне показывает 1, это происходит из-за того, что изначально у нас 0 = false и '0' тоже = false, при использовании || у нас будет false, так-как нет операнда true, после чего мы получаем снова получаем false при сравнении 0 && 1, так-как один из них false мы обратно получаем тоже false, в итоге мы получаем false => 1, что в итоге дает нам 1. В само конце не логично, что в итоге 0 нам дает true, но такой синтаксис JS )

let example_16 = (+null == false) < 1;
console.log (example_16); // Мне показывает false, это происходит из-за того, что null мы превращаем в NaN, так-как у нас числа нет, то NaN < 1 операция false

let example_17 = false && true || true;
console.log (example_17); // Мне показывает true , это происходит из-за того, что изначально мы при && получаем false, после чего при операции || испольуем последний операнд, это не null, там у нас стоит true и оно идет в ответ

let example_18 = false && (false || true);
console.log (example_18); // Мне показывает false , это происходит из-за того, что при || мы получаем true, так как там у нас нет null и мы принимаем второе значение, после чего делаем операцию с false && true, что в итоге дает нам false, так-как при выполнении операци первый операнд у нас false

let example_19 = (+null == false) < 1 ** 5;
console.log (example_19); // Мне показывает false, это происходит из-за того, что null мы превращаем в NaN, после чего NaN приравниваем к false, а NaN не равняется числу, в итоге в конце false < 1 в пятой степени, false не меньше чем любое число, поэтому в ответе false